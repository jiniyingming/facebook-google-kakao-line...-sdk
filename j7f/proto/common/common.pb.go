// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package common // import "j7go/proto/common"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 数据记录状态
type DelStatus int32

const (
	// 未删除
	DelStatus_NOT_DEL DelStatus = 0
	// 已删除
	DelStatus_DELED DelStatus = 1
)

var DelStatus_name = map[int32]string{
	0: "NOT_DEL",
	1: "DELED",
}
var DelStatus_value = map[string]int32{
	"NOT_DEL": 0,
	"DELED":   1,
}

func (x DelStatus) String() string {
	return proto.EnumName(DelStatus_name, int32(x))
}
func (DelStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_dc5354e7614d19d7, []int{0}
}



// 是否有效，全局类型
type IsAvailable int32

const (
	// 无效
	IsAvailable_UNAVAILABLE IsAvailable = 0
	// 有效
	IsAvailable_AVAILABLE IsAvailable = 1
)

var IsAvailable_name = map[int32]string{
	0: "UNAVAILABLE",
	1: "AVAILABLE",
}
var IsAvailable_value = map[string]int32{
	"UNAVAILABLE": 0,
	"AVAILABLE":   1,
}

func (x IsAvailable) String() string {
	return proto.EnumName(IsAvailable_name, int32(x))
}
func (IsAvailable) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_dc5354e7614d19d7, []int{2}
}

// 公共请求头
type CommonHeader struct {
	// trace_id
	TraceId              string   `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommonHeader) Reset()         { *m = CommonHeader{} }
func (m *CommonHeader) String() string { return proto.CompactTextString(m) }
func (*CommonHeader) ProtoMessage()    {}
func (*CommonHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_dc5354e7614d19d7, []int{0}
}
func (m *CommonHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommonHeader.Unmarshal(m, b)
}
func (m *CommonHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommonHeader.Marshal(b, m, deterministic)
}
func (dst *CommonHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommonHeader.Merge(dst, src)
}
func (m *CommonHeader) XXX_Size() int {
	return xxx_messageInfo_CommonHeader.Size(m)
}
func (m *CommonHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_CommonHeader.DiscardUnknown(m)
}

var xxx_messageInfo_CommonHeader proto.InternalMessageInfo

func (m *CommonHeader) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

// 公共响应状态
type BusinessStatus struct {
	// 响应状态码
	//
	// Types that are valid to be assigned to MsgCode:
	//	*BusinessStatus_Code
	MsgCode isBusinessStatus_MsgCode `protobuf_oneof:"msg_code"`
	// 响应消息
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	// trace_id
	TraceId              string   `protobuf:"bytes,3,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BusinessStatus) Reset()         { *m = BusinessStatus{} }
func (m *BusinessStatus) String() string { return proto.CompactTextString(m) }
func (*BusinessStatus) ProtoMessage()    {}
func (*BusinessStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_dc5354e7614d19d7, []int{1}
}
func (m *BusinessStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BusinessStatus.Unmarshal(m, b)
}
func (m *BusinessStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BusinessStatus.Marshal(b, m, deterministic)
}
func (dst *BusinessStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BusinessStatus.Merge(dst, src)
}
func (m *BusinessStatus) XXX_Size() int {
	return xxx_messageInfo_BusinessStatus.Size(m)
}
func (m *BusinessStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_BusinessStatus.DiscardUnknown(m)
}

var xxx_messageInfo_BusinessStatus proto.InternalMessageInfo

type isBusinessStatus_MsgCode interface {
	isBusinessStatus_MsgCode()
}

type BusinessStatus_Code struct {
	Code int32 `protobuf:"varint,1,opt,name=code,proto3,oneof"`
}

func (*BusinessStatus_Code) isBusinessStatus_MsgCode() {}

func (m *BusinessStatus) GetMsgCode() isBusinessStatus_MsgCode {
	if m != nil {
		return m.MsgCode
	}
	return nil
}

func (m *BusinessStatus) GetCode() int32 {
	if x, ok := m.GetMsgCode().(*BusinessStatus_Code); ok {
		return x.Code
	}
	return 0
}

func (m *BusinessStatus) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *BusinessStatus) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*BusinessStatus) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _BusinessStatus_OneofMarshaler, _BusinessStatus_OneofUnmarshaler, _BusinessStatus_OneofSizer, []interface{}{
		(*BusinessStatus_Code)(nil),
	}
}

func _BusinessStatus_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*BusinessStatus)
	// msg_code
	switch x := m.MsgCode.(type) {
	case *BusinessStatus_Code:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Code))
	case nil:
	default:
		return fmt.Errorf("BusinessStatus.MsgCode has unexpected type %T", x)
	}
	return nil
}

func _BusinessStatus_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*BusinessStatus)
	switch tag {
	case 1: // msg_code.code
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.MsgCode = &BusinessStatus_Code{int32(x)}
		return true, err
	default:
		return false, nil
	}
}

func _BusinessStatus_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*BusinessStatus)
	// msg_code
	switch x := m.MsgCode.(type) {
	case *BusinessStatus_Code:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Code))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// 全局底层服务timeout响应体
type TimeoutResponse struct {
	Status               *BusinessStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TimeoutResponse) Reset()         { *m = TimeoutResponse{} }
func (m *TimeoutResponse) String() string { return proto.CompactTextString(m) }
func (*TimeoutResponse) ProtoMessage()    {}
func (*TimeoutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_dc5354e7614d19d7, []int{2}
}
func (m *TimeoutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimeoutResponse.Unmarshal(m, b)
}
func (m *TimeoutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimeoutResponse.Marshal(b, m, deterministic)
}
func (dst *TimeoutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimeoutResponse.Merge(dst, src)
}
func (m *TimeoutResponse) XXX_Size() int {
	return xxx_messageInfo_TimeoutResponse.Size(m)
}
func (m *TimeoutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TimeoutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TimeoutResponse proto.InternalMessageInfo

func (m *TimeoutResponse) GetStatus() *BusinessStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*CommonHeader)(nil), "common.CommonHeader")
	proto.RegisterType((*BusinessStatus)(nil), "common.BusinessStatus")
	proto.RegisterType((*TimeoutResponse)(nil), "common.TimeoutResponse")
	proto.RegisterEnum("common.DelStatus", DelStatus_name, DelStatus_value)
	proto.RegisterEnum("common.IsAvailable", IsAvailable_name, IsAvailable_value)
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_common_dc5354e7614d19d7) }

var fileDescriptor_common_dc5354e7614d19d7 = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x5f, 0x6b, 0xb3, 0x30,
	0x14, 0xc6, 0xb5, 0x7d, 0x5b, 0xeb, 0xb1, 0xef, 0x2a, 0x61, 0x8c, 0xee, 0x6e, 0x74, 0x37, 0x5b,
	0x47, 0x95, 0x6d, 0x97, 0xbb, 0xd2, 0x29, 0x54, 0x70, 0x76, 0x58, 0xbb, 0x8d, 0x31, 0x10, 0xab,
	0x41, 0x64, 0x6a, 0x4a, 0x13, 0xc7, 0xfa, 0x15, 0xf7, 0xa9, 0x46, 0x62, 0x61, 0x78, 0x11, 0xf2,
	0x3c, 0xe4, 0x77, 0xfe, 0xe5, 0xc0, 0x38, 0x25, 0x55, 0x45, 0x6a, 0x63, 0xb7, 0x27, 0x8c, 0xa0,
	0x61, 0xeb, 0x66, 0xd7, 0x30, 0x7e, 0x14, 0x6a, 0x89, 0x93, 0x0c, 0xef, 0xd1, 0x39, 0x8c, 0xd8,
	0x3e, 0x49, 0x71, 0x5c, 0x64, 0x53, 0xf9, 0x42, 0xbe, 0x52, 0x43, 0x45, 0x78, 0x2f, 0x9b, 0xc5,
	0x70, 0x62, 0x37, 0xb4, 0xa8, 0x31, 0xa5, 0x6b, 0x96, 0xb0, 0x86, 0xa2, 0x53, 0xf8, 0x97, 0x92,
	0x0c, 0x0b, 0x70, 0xb0, 0x94, 0x42, 0xe1, 0x90, 0x0e, 0xfd, 0x8a, 0xe6, 0xd3, 0x9e, 0x88, 0xe6,
	0xb2, 0x93, 0xb4, 0xdf, 0x49, 0x6a, 0x03, 0x8c, 0x2a, 0x9a, 0xc7, 0x3c, 0x70, 0x66, 0xc1, 0x24,
	0x2a, 0x2a, 0x4c, 0x1a, 0x16, 0x62, 0xba, 0x23, 0x35, 0xc5, 0xc8, 0x80, 0x21, 0x15, 0xb5, 0x44,
	0x0d, 0xed, 0xee, 0xcc, 0x38, 0x4e, 0xd1, 0xed, 0x24, 0x3c, 0x52, 0xf3, 0x4b, 0x50, 0x1d, 0x5c,
	0x1e, 0xdb, 0xd3, 0x40, 0x09, 0x56, 0x51, 0xec, 0xb8, 0xbe, 0x2e, 0x21, 0x15, 0x06, 0x8e, 0xeb,
	0xbb, 0x8e, 0x2e, 0xcf, 0x6f, 0x40, 0x59, 0xe3, 0xef, 0xe8, 0xb0, 0xc3, 0x68, 0x0c, 0xa3, 0xb5,
	0xfb, 0x16, 0x7b, 0x81, 0x17, 0xe9, 0x12, 0x52, 0xa0, 0xff, 0x64, 0x05, 0xba, 0xcc, 0xe1, 0xd7,
	0x15, 0x97, 0xbd, 0xf9, 0x02, 0x34, 0x8f, 0x5a, 0x5f, 0x49, 0x51, 0x26, 0xdb, 0x12, 0xa3, 0x09,
	0x68, 0x9b, 0xc0, 0x7a, 0xb1, 0x3c, 0xdf, 0xb2, 0x7d, 0x57, 0x97, 0xd0, 0x7f, 0x50, 0xff, 0xac,
	0x6c, 0xbb, 0xef, 0xb7, 0x79, 0xc1, 0xca, 0x64, 0x6b, 0x50, 0x76, 0xc8, 0x8c, 0xb4, 0x36, 0x1b,
	0x46, 0xf8, 0x59, 0xd0, 0xec, 0xd3, 0xcc, 0x89, 0x29, 0xbe, 0xdf, 0x6c, 0xa7, 0x78, 0x68, 0xaf,
	0x9f, 0xde, 0x64, 0xc3, 0xc8, 0x33, 0x7f, 0xf8, 0x68, 0x97, 0xb1, 0x1d, 0x0a, 0xec, 0xfe, 0x37,
	0x00, 0x00, 0xff, 0xff, 0xf1, 0xe7, 0x71, 0x39, 0xb5, 0x01, 0x00, 0x00,
}
